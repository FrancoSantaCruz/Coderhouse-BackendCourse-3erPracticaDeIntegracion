externalDocs:
  description: Más información sobre la carrera Full Stack de Coderhouse
  url: https://www.coderhouse.com/online/carrera-online-desarrollo-fullstack

tags:
  - name: products
    description: Information about ecommerce's products
  - name: carts
    description: Information about products cart
      
paths:
  /api/products:
    get:
      tags:
        - products
      summary: Obtener todos los productos
      description: Retorna una lista de todos los productos disponibles.
      responses:
        '200':
          description: Éxito. Lista de productos obtenida.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'

  /api/products/{pid}:
    get:
      tags: 
        - products
      summary: Obtener un producto por ID
      description: Retorna la información de un producto específico basado en su ID.
      parameters:
        - in: path
          name: pid
          description: ID del producto a obtener.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Éxito. Información del producto obtenida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
  /api/products/new:                
    post:
      tags: 
        - products
      summary: Crear un nuevo producto
      description: Crea un nuevo producto en el sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        '200':
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products' 
  /api/products/update/{pid}:
    put:
      tags: 
        - products
      summary: Actualizar un producto por ID
      description: Actualiza la información de un producto existente basado en su ID.
      parameters:
        - in: path
          name: pid
          description: ID del producto a actualizar.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        '200':
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
  /api/products/delete/{pid}:
    delete:
      tags: 
        - products
      summary: Eliminar un producto por ID
      description: Elimina un producto existente basado en su ID.
      parameters:
        - in: path
          name: pid
          description: ID del producto a eliminar.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto eliminado exitosamente.
  /api/carts/{cid}:
    get:
      tags: 
        - carts
      summary: Obtener información de un carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        '200':
          description: OK
  /api/carts/:          
    post:
      tags: 
        - carts
      summary: Crear un nuevo carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: OK
  /api/carts/{cid}/purchase:
    post:
      tags: 
        - carts
      summary: Comprar carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito a comprar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            properties: {}
      responses:
        '200':
          description: OK
  /api/carts/clear/{cid}:
    put:
      tags: 
        - carts
      summary: Vaciar el carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito a vaciar
      responses:
        '200':
          description: OK
  /api/carts/add/{cid}/products/{pid}:
    put:
      tags: 
        - carts
      summary: Agregar producto al carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
            format: uuid
          description: ID del producto
      responses:
        '200':
          description: OK
  /api/carts/remove/{cid}/products/{pid}:
    put:
      tags: 
        - carts
      summary: Quitar un producto del carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
            format: uuid
          description: ID del producto
      responses:
        '200':
          description: OK  

          
components:
  schemas:
    Products:
      required:
        - id
        - title
        - description
        - code
        - price
        - status
        - stock
        - category
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: Microwave
        description:
          type: string
          example: Kitchen electrodomestic
        code:
          type: string
          description: String of numbers
          example: "05354"
        price:
          type: integer
          format: int64
          example: 8700
        status:
          type: boolean
          description: if product is available in shop
          enum:
            - true
            - false
        stock:
          type: integer
          format: int64
          example: 150
        category:
          # $ref: '#/components/schemas/Category'
          type: string
          description: product's category
          enum:
            - Clothe
            - Electrodomestic
            - Technology
            - Garden
            - Food
        sale:
          type: boolean
          description: if product is on sale
          enum:
            - true
            - false
        sale_percent:
          type: integer
          format: int64
          description: amount of discount applied to product
          example: 50
        thumbnails:
          type: array
          items:
            type: string
            format: uri
            example: 
              - https://dummyimage.com/600x400/000/fff
              - https://dummyimage.com/600x400/000/fff
              - https://dummyimage.com/600x400/000/fff
        owner:
          type: string
          format: email
          description: Product owner's email
          example: fsantacruz@test.com
    CartProduct:
      type: object
      properties:
        product:
          type: string
          format: uuid
          description: Product ID
        quantity:
          type: integer
          description: Product quantity in cart
      required:
        - product
        - quantity
    Cart:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/CartProduct'
      required:
        - products
